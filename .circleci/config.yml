version: 2.1
    

references:
  base: &base
    docker:
      - image: circleci/python:3.6

  qa-filters: &qa-filters
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^qa-v[0-9]+(\.[0-9]+)*$/


  staging-filters: &staging-filters
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^staging-v[0-9]+(\.[0-9]+)*$/


executors:
  python-executor:
    docker:
    - image: circleci/python:3.6

commands:
  docker-pull:
    parameters:
      image:
        type: string
        default: "Hello World"
    steps:
    - run: echo "Pulling docker image << parameters.image >>"

  deploy-to-kubernetes:
    steps:
    - run: echo "Deploying ${VERSION} to Kubernetes"

jobs:
  start-ci:
    machine: true
    steps:
      - checkout
      - run: docker run --rm -v ${PWD}:/app treeder/bump patch
      - persist_to_workspace:
          root: .
          paths: VERSION



  build-general:
    <<: *base
    steps:
    - checkout
    - attach_workspace:
        at: artifacts
    - run: echo "Linting"
    - run: echo "Running Unit Test"
    - run: echo "Building docker image"
    - run: echo "Running Component tests"
    - run: |
        echo "Tagging docker image: my-image:$(cat artifacts/VERSION)"
    - run: echo "Push to ECR"

  build-win:
    <<: *base
    steps:
      - run: echo "Some Windows specific things..."
  build-osx:
    <<: *base
    steps:
      - run: echo "Some OSX specific things..."

  run-integration-tests:
    <<: *base
    steps:
    - run: echo "Running automated integration tests"

  tag-build:
    machine: true
    parameters:
      env:
        type: string

    steps:
            - checkout
            - attach_workspace:
                at: .
            - add_ssh_keys:
                fingerprints:
                - "85:4f:eb:ce:f9:53:72:72:bd:11:14:84:d0:63:4d:2a"
            - run: |
                git config credential.helper 'cache --timeout=120'
                git config --global user.email circleci@build
                git config --global user.name CircleCI
                git config --global pager.tag false
            - run: ./promote.sh << parameters.env >>


  deploy-to:
    <<: *base
    parameters:
      env:
        type: string
    steps:
    - docker-pull
    - deploy-to-kubernetes

  run-automated-qa-tests:
    <<: *base
    steps:
    - docker-pull
    - deploy-to-kubernetes
    - run: echo "Run Automated QA Tests"

  run-stress-tests:
    <<: *base
    steps:
    - run: echo "Run Stress Tests"


workflows:
  version: 2.1

  ci:
    jobs:
    - start-ci
    - build-general:
        requires:
          - start-ci
    - build-win:
        requires:
        - build-general
    - build-osx:
        requires:
        - build-general
    - deploy-to:
        name: deploy-to-ci
        env: ci
        requires:
        - build-win
        - build-osx
    - run-integration-tests:
        requires:
        - deploy-to-ci
    - tag-build:
        name: tag-build-qa
        env: qa
        requires:
        - run-integration-tests
                

  qa:
    jobs:
    - start-qa:
        type: approval
        <<: *qa-filters
    - deploy-to:
        name: deploy-to-qa
        env: qa
        requires:
        - start-qa
        <<: *qa-filters

    - run-automated-qa-tests:
        requires:
        - deploy-to-qa
        <<: *qa-filters

    - confirm-manual-qa-ok:
        type: approval
        requires:
        - run-automated-qa-tests
        <<: *qa-filters
    - tag-build:
        name: tag-build-staging
        env: staging
        requires:
        - confirm-manual-qa-ok
        <<: *qa-filters


  staging:
    jobs:
    - start-staging:
        type: approval
        <<: *staging-filters
    - deploy-to:
        name: deploy-to-staging
        env: staging
        requires:
        - start-staging
        <<: *staging-filters

    - run-stress-tests:
        requires:
        - deploy-to-staging
        <<: *staging-filters

    - confirm-manual-qa-ok:
        type: approval
        requires:
        -  run-stress-tests
        <<: *staging-filters